//Solution sheet for midPaper of SY-IT(2024/March)
Q1>Assume your CSE department friend, Mr. JP, is interested in learning Java Programming. Assist him in understanding the output of the following queries within the jshell environment. Without explanation no marks will be awarded.
Assume that Integer y = 10 and String s = "sggs" are predefined in the environment.

		Q1-a>jshell Integer.rotateLeft(y,3)
		solution:
			Integer.rotateLeft(y,3)
			jshell> Integer.rotateLeft(y,3)
			$4 ==> 80
			This method will do left rotation of 2's complement of y=10
			or Y will get multiplied by 2pow(3) 
Q1-b>s==(String)"sggs"
				solution :

				jshell> Integer y=10
				y ==> 10

				jshell> String s="sggs"
				s ==> "sggs"

				jshell> s==(String)"sggs"
				$3 ==> true
				here ,
						first object will create for s 		     and content stored in it will be "sggs"
		(String)"sggs",is also creating an String having same content as s
		Hence,if second String is not created by new keyword,
		Second string will check same string content is present in heap memory String then it will not create new object for it 
		And == operator will check String by refference
Q1-c>jshell> y+(y=17)			
		$5 ==> 27
		Solution:It will simply do (y=10)+(y=17) Addition 
		
		
		
		
Q1-d>jshell> y=Integer(25)
	jshell> y=Integer(25)
	|  Error:
	|  cannot find symbol
	|    symbol:   method Integer(int)
	|  y=Integer(25)
	|    ^-----^
	
	Here,Syntax is Incorrect.
	Correct Syntax will be 
	jshell> y=(Integer)25
	y ==> 25
	
	
	
	
Q1-e>jshell> (short)9042024
	$7 ==> -1944
	solution:
		$17 ==> 137

		jshell> 9042024%65536
		$18 ==> 63592

		jshell> 63592-65536
		$19 ==> -1944

		
Q2->In what situations can the following errors occur in Java programming? Provide a brief example with short explanations.
	Q2-a>error: Could not find or load main class Sample
	solution:
		Required Program:
		class name{
			public static void main(String args[]){
				name s2=new name();
			}
		}
		here ,we first compile as:javac que2a.java
		java sample
		It will give an error:
		Error: Could not find or load main class sample
		Caused by: java.lang.ClassNotFoundException: sample
		Because,it is not able load found sample in that file
	Q2->b:midterm.java:3: error: unclosed string literal
		Given below code will give that error
		jshell> String name="sggs;
			|  Error:
			|  unclosed string literal
			|  String name="sggs;
			|              ^

			jshell> 
		It is Systactically wrong ,
		Correct reprentation of that Question
		jshell> String name="sggs"
		name ==> "sggs"
	Q2-c:error: array required, but String found
		Following code will give same error
			class subseq{
				boolean isSubseq(String s1,String s2){
				int j=0,i=0;
				for(i=0;i<s1.length();i++){
					while(i<j){
						if(s1[i]==s2[j]){
							i++;
							j++;
						}
						else{
							j++;
						}
					}
					return true;
					
				}
				return  false;
				}
				public static void main(String args[]){
					subseq s1=new subseq();
					System.out.println(s1.isSubseq("sggsclg","clg"));
					
				}
			}
			Output:que2c.java:6: error: array required, but String found
			if(s1[i]==s2[j]){
			     ^
			que2c.java:6: error: array required, but String found
			if(s1[i]==s2[j]){
			 2 errors

Q3-How can we run the java code like a C code? Provide the necessary commands for compiling and running the java code without implementing any class in a source file, assuming a JDK version 21 is available. Provide the meaning/purpose of commands in short.

		void main(){
			//statement
		}
		we can run these code using javac-release 21 --enable preview fun.java(file name)
Q4:What will be the output of the following code? Analyse the code carefully. No partial marking will be provided. Short justification is required. Assume that the code is executed using java command and a class name in which main method is defined.
	Q4:a>public class ques4a{

			ques4a(){
				this(5);
			}

			ques4a(int x) {
				this();
			}

			public static void main(String[] args) {
				ques4a q3 = new ques4a();
				System.out.println("Welcome!");

			}
		}
		Output ofthat code will be:
		ques4a.java:3: error: recursive constructor invocation
			ques4a(){
			^
		1 error
	Reason:
		If a constructor calls itself, then the error message “recursive constructor invocation” occurs.
		The Above program is not allowed by the compiler because inside the constructor we tried to call the same constructor. 
		The compiler detects it instantly and throws an error.
		Q4->b:
		public class ques4b{
				public static void main(String args[]){
					String exam="Mid";
					exam.concat("Semester");
					System.out.println("Examination"+exam);	
				}	
			} 
		}
		Output:Code will Execute without any error 
		Output will be:ExaminationMid
		Q4-c>
			public class ques4c{
				ques4c q4=new ques4c();
				public static void main(String args[]){
					ques4c q4=new ques4c();
				}	
				}
	//Error will be-
	 //Exception in thread "main" java.lang.StackOverflowError
	 Reason:
	 Here ,we are creating an object class ques4c before calling main method
	 
Q4-d:
Given Program:
		class Exam {
			static {
				System.out.println("Static Block 1: EXAM");
			}
			Exam(){
				System.out.println("EXAM Constructor");
			}

			{
				 System.out.println("Init Block: EXAM");
			}
			static {
				System.out.println("Static Block 2: EXAM");

			}
		}
		class MidTerm extends Exam{
			static {
				System.out.println("Static Block 1: MIDTERM");
			}

			MidTerm(){
				System.out.println("MIDTERM Constructor");
			}

			public String toString() {
				return "MidTerm";
			}

			static {

			System.out.println("Static Block 2: MIDTERM");

			}

		public static void main(String args[]) {

			System.out.println("Welcome To Mid Term Examiniation");

			Exam exam = new Exam();

			MidTerm javaProgramming = new MidTerm();
			System.out.println(javaProgramming);

		}

			{
				System.out.println("Init Block: MIDTERM");
			}
		}
	Program will run Successfully.
	Output will be:
		Static Block 1: EXAM
		Static Block 2: EXAM
		Static Block 1: MIDTERM
		Static Block 2: MIDTERM
		Welcome To Mid Term Examiniation
		Init Block: EXAM
		EXAM Constructor
		Init Block: EXAM
		EXAM Constructor
		Init Block: MIDTERM
		MIDTERM Constructor
		MidTerm
	Short Explanation:
		Here,first all Static block of Parents class(i,e Exam)  first and  static block of child class (i,e MidTerm) will get executed respaectively.
		second when object of child class get created as soon as object of parents also get created .
		After ,Creation of an object (Init) blocks of both parents and child class get executed ,
		then  First (Construtor) of Parents class and then only child class get called.
Q5: class Question {
	public static void main(String[] args) {
		String str1 = "Mid";
		String str2 = new String("Term");
		String str3 = "Mid";
		String str4 = str2;
		String str5 = new String("Term");
	}
	}
	
			jshell> String str1="Mid"
			str1 ==> "Mid"

			jshell> String str2=new String("Term")
			str2 ==> "Term"

			jshell> String str3="Mid"
			str3 ==> "Mid"

			jshell> String str4=str2
			str4 ==> "Term"

			jshell> String str5=new String("Term")
			str5 ==> "Term"

			jshell> str1==str3
			$7 ==> true

			jshell> str4==str2
			$8 ==> true

		3 objects will create their 
		first-->str1 having content Mid
		second str2-->creation is done by new keyword
		str3 will referrence to same as str1
		str4 will refer to same as str2
		Third object will be str5
//End of the paper
